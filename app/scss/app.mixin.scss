@charset "UTF-8";

@mixin clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

$bg-color-base: #555;

@mixin color-variant($bg-color:$bg-color-base,$lt-percent:10%,$lter-percent:15%,$dk-percent:10%,$dker-percent:15%) {
  background: $bg-color;
  &.lt,
  .lt {
    background-color: lighten($bg-color, $lt-percent);
  }
  &.lter {
    background-color: lighten($bg-color, $lter-percent);
  }
  &.dk,
  .dk {
    background-color: darken($bg-color, $dk-percent);
  }
  &.dker,
  .dker {
    background-color: darken($bg-color, $dker-percent);
  }
}

@mixin font-variant($bg-color) {
  $font-color: desaturate(lighten($bg-color, 40%), 10%);
  $link-color: desaturate(lighten($bg-color, 50%), 10%);
  $hover-color: #fff;
  color: $font-color;
  a {
    color: $link-color;
    &:hover {
      color: $hover-color;
    }
    &.list-group-item {
      &:hover,
      &:focus {
        background-color: inherit;
      }
    }
  }
  .nav {
    > li {
      &:hover,
      &:focus,
      &.active {
        > a {
          color: $hover-color;
          background-color: darken($bg-color, 5%);
        }
      }
      > a {
        color: darken($link-color, 5%);
        &:hover,
        &:focus {
          background-color: darken($bg-color, 2.5%);
        }
      }
    }
    .open > a {
      background-color: darken($bg-color, 2.5%);
    }
  }
  .caret {
    border-top-color: $font-color;
    border-bottom-color: $font-color;
  }
  &.navbar .nav {
    > li.active > a {
      color: $hover-color;
      background-color: darken($bg-color, 2.5%);
    }
  }
  .open > a {
    &,
    &:hover,
    &:focus {
      color: $hover-color;
    }
  }
  .text-muted {
    color: darken($font-color, 10%) !important;
  }
  .text-lt {
    color: lighten($font-color, 25%) !important;
  }
  &.auto,
  .auto {
    .list-group-item {
      border-color: darken($bg-color, 5%) !important;
      background-color: transparent;
      &:hover,
      &:focus,
      &:active,
      &.active {
        background-color: darken($bg-color, 2.5%) !important;
      }
    }
  }
}

@mixin text-variant($bg-color, $name) {
  a.bg-#{$name}:hover {
    background-color: darken($bg-color, 5%);
  }
  a.text-#{$name}:hover {
    color: darken($bg-color, 5%);
  }
  .text-#{$name} {
    color: $bg-color;
  }
  .text-#{$name}-lt {
    color: lighten($bg-color, 5%);
  }
  .text-#{$name}-lter {
    color: lighten($bg-color, 10%);
  }
  .text-#{$name}-dk {
    color: darken($bg-color, 5%);
  }
  .text-#{$name}-dker {
    color: darken($bg-color, 10%);
  }
}

/// Mixin printing a linear-gradient
///       线性渐变
/// and the `-webkit-` prefixed declaration
/// https://www.sitepoint.com/building-linear-gradient-mixin-sass/
/// @access public
/// @param {Keyword | Angle} $direction - Linear gradient direction
/// @param {Arglist} $color-stops - List of color-stops composing the gradient
@mixin linear-gradient($direction, $color-stops...) {
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

@mixin translateZ($z...) {
  -webkit-transform: translateZ($z);
  -ms-transform: translateZ($z);
  -o-transform: translateZ($z);
  transform: translateZ($z);
}

// CSS3 PROPERTIES
// --------------------------------------------------

// Single side border-radius
@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}

// Drop shadows
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}

// Transitions
@mixin transition($transition...) {
  -webkit-transition: $transition;
  transition: $transition;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
  transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration) {
  -webkit-transition-duration: $transition-duration;
  transition-duration: $transition-duration;
}
@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
  -moz-transition: -moz-transform $transition;
  -o-transition: -o-transform $transition;
  transition: transform $transition;
}

// Transformations
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -ms-transform: rotate($degrees); // IE9+
  transform: rotate($degrees);
}
@mixin scale($ratio) {
  -webkit-transform: scale($ratio);
  -ms-transform: scale($ratio); // IE9+
  transform: scale($ratio);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -ms-transform: translate($x, $y); // IE9+
  transform: translate($x, $y);
}
@mixin skew($x, $y) {
  -webkit-transform: skew($x, $y);
  -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
  transform: skew($x, $y);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

@mixin border-radius($border-radius...){
  -webkit-border-radius:$border-radius;
  -moz-border-radius:$border-radius;
  border-radius:$border-radius;
}